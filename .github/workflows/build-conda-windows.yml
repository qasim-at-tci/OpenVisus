name: build-conda-windows
on: [push]
jobs:
  Build:
    runs-on: "windows-latest"
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9'] 
    steps:
    
    - name: git clone OpenVisus
      uses: actions/checkout@v2  
      
    - name: filter CI
      uses: mstachniuk/ci-skip@v1
      with:
        fail-fast: true
        exit-code: 0
        commit-filter: '[no-ci];[macos];[linux];[cpython]'
        commit-filter-separator: ';'

    - name: git clone opsray 
      uses: nick-invision/retry@v1
      with:
        max_attempts: 3
        timeout_minutes: 4
        retry_wait_seconds: 5
        command: 'rm -Rf ExternalLibs/ospray_win && git clone https://github.com/sci-visus/ospray_win.git  ExternalLibs/ospray_win'    

    - name: Install Miniconda 
      uses: conda-incubator/setup-miniconda@v2
      continue-on-error: true # if fails the cleaning process
      with:
        miniconda-version: 'latest'
        python-version: ${{ matrix.python-version }}
        activate-environment: tmp
        auto-update-conda: false
        channels: conda-forge,defaults

    - name: Configure Miniconda 
      shell: bash -l {0}
      run: |
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no   1>/dev/null
           conda install conda 1>/dev/null

    - name: Install Swig 
      shell: bash -l {0}
      run: |  
           set -e 
           set -x
           # problems with choco
           curl -L --insecure https://cfhcable.dl.sourceforge.net/project/swig/swigwin/swigwin-4.0.2/swigwin-4.0.2.zip -O  
           unzip swigwin-4.0.2.zip 

    - name: Install CMake 
      shell: bash -l {0}    
      run: conda install -c conda-forge cmake
    
    - name: Install PyQt 
      shell: bash -l {0}
      run: conda install -y pyqt=5.9  # -c conda-forge -y pyqt=5.12 (they rename DLLS, like Qt5Core.dll->Qt5Core_conda.dll))

    - name: Compile 
      shell: bash -l {0}
      run: |
           set -e 
           set -x
           mkdir -p build
           cd build
           cmake \
             -G "Visual Studio 16 2019" \
             -A "x64" \
             -DQt5_DIR="${CONDA_PREFIX}/Library/lib/cmake/Qt5" \
             -DPython_EXECUTABLE=$(which python) \
             -DSWIG_EXECUTABLE=../swigwin-4.0.2/swig.exe \
             -DVISUS_SLAM=1 ../
           cmake --build . --target ALL_BUILD --config Release --parallel 4
           cmake --build . --target install   --config Release

    - name: Test  
      shell: bash -l {0}
      run: |
           set -e 
           set -x  
           which python
           cd build/Release/OpenVisus
           export PYTHONPATH=../
           python -m OpenVisus configure  || true  # segmentation fault problem on linux
           python -m OpenVisus test
           python -m OpenVisus test-gui

    - name: Conda distribution
      shell: bash -l {0}   
      run: |
           set -e  
           set -x  
           cd build/Release/OpenVisus
           conda install --yes anaconda-client  1>/dev/null  || true
           conda install --yes conda-build      1>/dev/null  || true
           conda install --yes wheel            1>/dev/null  || true
           rm -Rf $(find ${CONDA_PREFIX} -iname "openvisus*.tar.bz2")  || true
           python setup.py -q bdist_conda 1>/dev/null
           CONDA_FILENAME=$(find ${CONDA_PREFIX} -iname "openvisus*.tar.bz2"  | head -n 1)       
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           echo "GIT_TAG=$GIT_TAG"
           if [[ "${GIT_TAG}" != ""  ]] ; then
             export PATH=$HOME/anaconda3/bin:$PATH
             anaconda --verbose --show-traceback  -t ${{ secrets.ANACONDA_TOKEN }}   upload "${CONDA_FILENAME}"
           fi
