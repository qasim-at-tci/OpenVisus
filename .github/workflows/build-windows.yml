name: build-windows
on: [push]
jobs:
  Build:

    runs-on: "windows-latest"
    strategy:
      fail-fast: false  
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9'] 
        VISUS_GUI: ['1', '0']
     
    steps:
    
    - name: git clone OpenVisus
      uses: actions/checkout@v2
      
    - name: filter CI
      uses: mstachniuk/ci-skip@v1
      with:
        fail-fast: true
        exit-code: 0
        commit-filter: '[no-ci];[macos];[linux];[conda]'
        commit-filter-separator: ';'

    - name: git clone opsray 
      if: matrix.VISUS_GUI == '1'
      uses: nick-invision/retry@v1
      with:
        max_attempts: 3
        timeout_minutes: 4
        retry_wait_seconds: 5
        command: 'rm -Rf ExternalLibs/ospray_win && git clone https://github.com/sci-visus/ospray_win.git  ExternalLibs/ospray_win'

    - name: Install CMake 
      uses: lukka/get-cmake@latest

    - name: Install Swig 
      shell: bash -l {0}
      run: |
           curl -L --insecure https://cfhcable.dl.sourceforge.net/project/swig/swigwin/swigwin-4.0.2/swigwin-4.0.2.zip -O
           unzip swigwin-4.0.2.zip # problems with choco 

    - name: Install CPython 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'

    - name: Install Qt 
      if: matrix.VISUS_GUI == '1'
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.8'
        arch: 'win64_msvc2017_64'
        install-deps: 'true'
        dir: C:\
        setup-python: 'false' 
    
    - name: Compile  
      shell: bash -l {0}
      run: |
           set -x
           mkdir -p build 
           cd build
           cmake -G "Visual Studio 16 2019" -A "x64" \
             -DVISUS_GUI=${{ matrix.VISUS_GUI }} \
             -DVISUS_SLAM=${{ matrix.VISUS_GUI }} \
             -DQt5_DIR="${Qt5_Dir}/lib/cmake/Qt5" \
             -DPython_EXECUTABLE=${pythonLocation}/python.exe  \
             -DSWIG_EXECUTABLE=../swigwin-4.0.2/swig.exe \
             ../
           cmake --build . --target ALL_BUILD --config Release --parallel 4
           cmake --build . --target install   --config Release

    - name: Test  
      shell: bash -l {0}
      run: |
           set -x
           which python
           cd build/Release/OpenVisus
           export PYTHONPATH=../
           ${pythonLocation}/python  -m OpenVisus configure  || true  # segmentation fault problem on linux
           ${pythonLocation}/python  -m OpenVisus test
           if [[ "${{ matrix.VISUS_GUI }}" == "1" ]] ; then 
             ${pythonLocation}/python  -m OpenVisus test-gui 
           fi

    - name: Create wheel
      shell: bash -l {0}
      run: |
           set -x
           ${pythonLocation}/python -m pip install setuptools wheel twine --upgrade 1>/dev/null || true
           cd build/Release/OpenVisus
           
           # running setup to create the wheel
           Version=${{ matrix.python-version }}
           ${pythonLocation}/python setup.py -q bdist_wheel --python-tag=cp${Version:0:1}${Version:2:1} --plat-name=win_amd64
             
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           echo "GIT_TAG=$GIT_TAG"
           if [[ "${GIT_TAG}" != "" ]] ; then
             ${pythonLocation}/python -m twine upload --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --skip-existing  "dist/*.whl" 
           fi
