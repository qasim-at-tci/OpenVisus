name: build-macos
on: [push]
jobs:
  build-cpython:
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.8' ] 
        specs: [
            {key: 'cpyth-ngui', conda: '0', gui: '0'},
            {key: 'cpyth-ygui', conda: '0', gui: '1'},
            {key: 'conda-ygui', conda: '1', gui: '1'}
          ]
     
    steps:
    
      # ////////////////////////////////////////////////////////////////////    
    - name: git clone OpenVisus
      uses: actions/checkout@v2
      
    - name: Install SDK 10.9 
      uses: nick-invision/retry@v1
      with:
        max_attempts: 3
        timeout_minutes: 5
        retry_wait_seconds: 5
        command: 'cd /tmp && rm -Rf MacOSX-SDKs && git clone https://github.com/phracker/MacOSX-SDKs.git'

      # ////////////////////////////////////////////////////////////////////
    - name: Install CPython 
      if:  matrix.specs.conda == '0'
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'

    - name: Install Qt for macos
      if: matrix.specs.conda == '0' && matrix.specs.gui == '1'
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.8'
        target: 'desktop'
        install-deps: 'true'  
        dir: /tmp
        setup-python: 'false' 

    - name: Compile OpenVisus on cpython
      shell: bash -l {0}
      run: |
           brew install swig cmake
           
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           PYTHON_VERSION=${{ matrix.python-version }}
      
           mkdir -p build 
           cd build
           cmake -GXcode  \
             -DVISUS_GUI=${{ matrix.specs.gui }} \
             -DVISUS_SLAM=${{ matrix.specs.gui }} \
             -DQt5_DIR="${Qt5_Dir}/lib/cmake/Qt5" \
             -DCMAKE_OSX_SYSROOT="/tmp/MacOSX-SDKs/MacOSX10.9.sdk" \
             -DPython_EXECUTABLE=${pythonLocation}/python  \
             ../
           cmake --build ./ --target ALL_BUILD --config Release --parallel 4 
           cmake --build ./ --target install   --config Release 
           
           export PYTHONPATH=$PWD/Release
           python3  -m OpenVisus configure 
           python3  -m OpenVisus test
           python3  -m OpenVisus test-gui
           unset PYTHONPATH
           
           if [[ "${GIT_TAG}" != "" ]] ; then
             cd Release/OpenVisus
             python3 -m pip install setuptools wheel twine 1>/dev/null 
             python3 setup.py -q bdist_wheel --python-tag=cp${PYTHON_VERSION:0:1}${PYTHON_VERSION:2:1} --plat-name=macosx_10_9_x86_64
             python3 -m twine upload --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --skip-existing  "dist/*.whl" 
           fi           

      # ////////////////////////////////////////////////////////////////////    
    - name: Install and confifure Miniconda 
      if:  matrix.specs.conda == '1'
      uses: conda-incubator/setup-miniconda@v2
      continue-on-error: true # if fails the cleaning process
      with:
        miniconda-version: 'latest'
        python-version: ${{ matrix.python-version }}
        activate-environment: tmp
        auto-update-conda: false
        channels: conda-forge,defaults
        
    - name: Compile OpenVisus on conda
      if:  matrix.specs.conda == '1'
      shell: bash -l {0}
      run: |
           set -e
           set -x
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           
           # brew install swig cmake
           conda install -c conda-forge numpy anaconda-client conda conda-build wheel cmake swig pyqt
           
           mkdir -p build
           cd build
           cmake \
              -GXcode \
              -DCMAKE_OSX_SYSROOT="/tmp/MacOSX-SDKs/MacOSX10.9.sdk"  \
              -DPython_EXECUTABLE=$(which python) \
              -DVISUS_GUI=${{ matrix.specs.gui }}  \
              -DVISUS_SLAM=${{ matrix.specs.gui }}  \
              -DQt5_DIR="${CONDA_PREFIX}/lib/cmake/Qt5" \
              ../
           cmake --build ./ --target ALL_BUILD --config Release --parallel 4 
           cmake --build ./ --target install   --config Release 
           
           conda develop $PWD/build/Release
           python -m OpenVisus configure 
           python -m OpenVisus test
           python -m OpenVisus test-gui
           conda develop $PWD/build/Release --uninstall
           
           if [[ "${GIT_TAG}" != ""  ]] ; then
             cd Release/OpenVisus
             conda config --set always_yes yes --set changeps1 no --set anaconda_upload no   1>/dev/null
             conda install --yes conda anaconda-client conda-build wheel  1>/dev/null
             cp --no-clobber ${CONDA_PREFIX}/lib/python${{ matrix.python-version }}/distutils/command/bdist_conda* ${CONDA_PREFIX}/lib/python3.8/site-packages/setuptools/_distutils/command/ # fix problem of bdist_conda command not found
             python setup.py -q bdist_conda 1>/dev/null
             export PATH=$HOME/anaconda3/bin:$PATH
             __filename=$(find ${CONDA_PREFIX} -iname "openvisus*.tar.bz2"  | head -n 1) 
             anaconda --verbose --show-traceback  -t ${{ secrets.ANACONDA_TOKEN }}   upload "${__filename}"
           fi
