name: cpython-macos
on: [push]
jobs:
  Build:
    runs-on: "macos-latest"
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9'] 
        VISUS_GUI: ['1', '0']
    steps:
    
    # ____________________________________________ 
    - name: git clone OpenVisus
      uses: actions/checkout@v2
     
    # ____________________________________________ 
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    # ____________________________________________ 
    - name: Install Swig 
      shell: bash -l {0}
      run: brew install swig
      
    # ____________________________________________ 
    - name: Install SDK 10.9 
      uses: nick-invision/retry@v1
      with:
        max_attempts: 3
        timeout_minutes: 5
        retry_wait_seconds: 5
        command: 'cd /tmp && rm -Rf MacOSX-SDKs && git clone https://github.com/phracker/MacOSX-SDKs.git'

    # ____________________________________________ INSTALL CPYTHON 
    - name: Install CPython 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'

    # ____________________________________________ INSTALL QT (use existing python see https://github.com/jurplel/install-qt-action)
    - name: Install Qt
      if: matrix.VISUS_GUI == '1'
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.8'
        target: 'desktop'
        install-deps: 'true'  
        dir: /tmp
        setup-python: 'false' 

    # ____________________________________________ 
    - name: Compile 
      shell: bash -l {0}
      run: |
           mkdir -p build 
           cd build
           cmake -GXcode  \
             -DVISUS_GUI=${{ matrix.VISUS_GUI }} \
             -DVISUS_SLAM=${{ matrix.VISUS_GUI }} \
             -DQt5_DIR="${Qt5_Dir}/lib/cmake/Qt5" \
             -DCMAKE_OSX_SYSROOT="/tmp/MacOSX-SDKs/MacOSX10.9.sdk" \
             -DPython_EXECUTABLE=${pythonLocation}/python  \
             ../
           cmake --build ./ --target ALL_BUILD --config Release --parallel 4 
           cmake --build ./ --target install   --config Release 
           
    # ____________________________________________ 
    - name: Test  
      shell: bash -l {0}
      run: |
           set -x
           which python
           cd build/Release/OpenVisus
           export PYTHONPATH=../
           ${pythonLocation}/python  -m OpenVisus configure  || true  # segmentation fault problem on linux
           ${pythonLocation}/python  -m OpenVisus test
           if [[ "${{ matrix.VISUS_GUI }}" == "1" ]] ; then 
             ${pythonLocation}/python  -m OpenVisus test-gui 
           fi

    # ____________________________________________ 
    - name: Distrib 
      shell: bash -l {0}
      run: |
           ${pythonLocation}/python -m pip install setuptools wheel twine --upgrade 1>/dev/null || true
           cd build/Release/OpenVisus
           # running setup to create the wheel
           PYTHON_VERSION=${{ matrix.python-version }}
           ${pythonLocation}/python setup.py -q bdist_wheel --python-tag=cp${PYTHON_VERSION:0:1}${PYTHON_VERSION:2:1} --plat-name=macosx_10_9_x86_64  
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)           
           if [[ "${GIT_TAG}" != "" ]] ; then
             echo "GIT_TAG $GIT_TAG"
             ${pythonLocation}/python -m twine upload --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --skip-existing  "dist/*.whl" 
           fi