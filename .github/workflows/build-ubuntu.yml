name: build-ubuntu
on: [push]
jobs:

  build-job:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.8',] 
        specs: [
            {key: 'cpyth-ngui-amd64',  platform: 'linux/amd64' , type: 'cpython', gui: '0', docker-image: 'visus/portable-linux-binaries_x86_64:2.0', qt5-dir: ''                      , wheel-platform-name: 'manylinux2010_x86_64'  },
            {key: 'cpyth-ygui-amd64',  platform: 'linux/amd64' , type: 'cpython', gui: '1', docker-image: 'visus/portable-linux-binaries_x86_64:2.0', qt5-dir: '/opt/qt512'            , wheel-platform-name: 'manylinux2010_x86_64'  },
            {key: 'cpyth-ngui-arm64',  platform: 'linux/arm64' , type: 'cpython', gui: '0', docker-image: 'nsdf/manylinux2014_aarch64:latest'       , qt5-dir: ''                      , wheel-platform-name: 'manylinux2014_aarch64' },
            
            {key: 'conda-ygui-amd64',  platform: 'linux/amd64' , type: 'conda'  , gui: '1', docker-image: 'condaforge/mambaforge:latest'            , qt5-dir: 'lib/cmake/Qt5'         , wheel-platform-name: ''  },
            {key: 'conda-ngui-arm64',  platform: 'linux/arm64' , type: 'conda'  , gui: '0', docker-image: 'condaforge/mambaforge:latest'            , qt5-dir: ''                      , wheel-platform-name: ''  }
          ]
     
    steps:
    
      # ////////////////////////////////////////////////////////////
    
    - name: git clone OpenVisus
      uses: actions/checkout@v2

    - name: Set up QEMU
      if:  matrix.specs.platform=='linux/arm64'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
        
    - name: Set up Docker Buildx
      if:  matrix.specs.platform=='linux/arm64'
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Available platforms
      if:  matrix.specs.platform=='linux/arm64'
      run: echo ${{ steps.buildx.outputs.platforms }}
                
    - name: Compile OpenVisus
      shell: bash
      run: |
          docker run --rm --platform ${{ matrix.specs.platform }} \
            -e VISUS_GUI=${{ matrix.specs.gui } \
            -e PYTHON_VERSION=${{ matrix.python-version }} \
            -e PLATFORM=${{ matrix.specs.platform }} \
            -e Qt5_DIR=${{ matrix.specs.qt5-dir }} \
            -e WHEEL_PLATFORM_NAME=${{ matrix.specs.wheel-platform-name }} \
            -e PYPI_USERNAME=${{ secrets.PYPI_USERNAME }} \
            -e PYPI_PASSWORD={ secrets.PYPI_PASSWORD } \
            -e DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} \
            -e DOCKER_TOKEN=${{ secrets.DOCKER_TOKEN }} \
            -e ANACONDA_TOKEN=${{ secrets.ANACONDA_TOKEN }} \
            -v $PWD:/home/OpenVisus \
            -w /home/OpenVisus ${{ matrix.specs.docker-image }} \
            bash .github/workflows/build-ubuntu-${{ matrix.specs.type }}.sh



